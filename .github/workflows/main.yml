name: Deploy Flask App to Azure Container Instances

on:
  push:
    branches:
      - main  # Pas aan indien nodig

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout de code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Login bij Azure
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 3. Login bij Azure Container Registry
    - name: Docker Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    # 4. Build en push Docker image
    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }} .
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}

    # 5. Deploy naar Azure Container Instances in North Europe
    - name: Deploy to Azure Container Instances
      uses: azure/aci-deploy@v1
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.REPOSITORY_NAME }}:${{ github.run_number }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: flask-webapp
        location: 'north europe'
        ports: '3000'
        azure-file-volume-share-name: dockerfileshare
        azure-file-volume-account-name: ${{ secrets.STORAGE_ACCOUNT_NAME }}
        azure-file-volume-account-key: ${{ secrets.STORAGE_ACCOUNT_KEY }}
        azure-file-volume-mount-path: /mnt/azfiles
